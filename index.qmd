---
format: 
  revealjs:
    theme: assets/custom_mod.scss
    code-overflow: wrap
    smaller: true
    scrollable: true
    progress: true
    navigation-mode: linear
filters:
  - webr
webr: 
  show-startup-message: false
  packages: ["ggplot2", "dplyr", "MetBrewer", "treemapify", "ggridges"]
editor: 
    render-on-save: true
editor_options: 
  chunk_output_type: console
---

```{r}
# For r blocks
library(ggplot2) 
library(dplyr)
library(treemapify)
```

# Getting creative<br>with ggplot2

::: {.center}
Workshops for Ukraine · Georgios Karamanis
:::

::: notes
I guess most of you know that can you create great data visualizations with R and ggplot2 But did you know that you can also create visualizations like
:::

------------------------------------------------------------------------

::::: columns
::: {.column width="40%"}
![](assets/img/georgios.jpeg){fig-align="center"}
:::

::: column
<br> Psychiatrist\
[Gender Identity Clinic, Uppsala University Hospital](https://www.akademiska.se/for-patient-och-besokare/hitta-pa-sjukhuset/a-till-o/konsidentitetsmottagningen/)

PhD student\
[Department of Medical Sciences, Uppsala University](https://www.uu.se/en/contact-and-organisation/staff?query=N11-739)

Data visualization designer\
[Explained](https://explained.media)
:::
:::::

------------------------------------------------------------------------

![](assets/img/penguins.png){fig-align="center"}

::: notes
this
:::

------------------------------------------------------------------------

![](assets/img/carbon2.png){fig-align="center"}

::: notes
this
:::

------------------------------------------------------------------------

![](assets/img/space.png){fig-align="center"}

::: notes
or this!
:::

------------------------------------------------------------------------

## Why?

Creative visualizations stand out

Emotional connection, engagement

Better and more clear communication\*

::: notes
My talk is about creative visualizations but you may ask, why?

making the plot more resonant and memorable, retain information better
:::

------------------------------------------------------------------------

## Why?

Self-expression

::: notes
My feeling is that when most people talk about creativity what they actually mean is having a personal style, unique, productive
:::

------------------------------------------------------------------------

![](assets/img/dear_data.png)

------------------------------------------------------------------------

## Creativity

:::::::: columns
::::: column
::: fragment
Novelty

Useful solutions

Transform or synthesize
:::

::: fragment
\
Connecting seemingly unrelated concepts
:::
:::::

:::: {.column width="400px"}
::: fragment
![](assets/img/clown.jpeg){fig-align="center"}
:::
::::
::::::::

::: notes
Many definitions

from the definition of humor: a sense of surprise
:::

------------------------------------------------------------------------

![](assets/img/transfers.png){fig-align="center"}

------------------------------------------------------------------------

![](assets/img/dataviz1.png){fig-align="center"}

------------------------------------------------------------------------

![](assets/img/dataviz2.png){fig-align="center"}

::: notes
Very wide field, different types of tools, techniques, materials even
:::

------------------------------------------------------------------------

## R and ggplot2

::::: columns
::: column
Programming language\
\

Grammar of Graphics

Flexible and customizable

ggplot2 extensions
:::

::: column
![](assets/img/layers.png){fig-align="center"}
:::
:::::

::: notes
Being creative is not about the tools but R/ggplot2 have some advantages Since we're at posit::conf, we're going to talk about the tools we use!

https://r.qcbs.ca/workshop03/book-en/grammar-of-graphics-gg-basics.html https://exts.ggplot2.tidyverse.org/gallery/
:::

------------------------------------------------------------------------

```{r}
#| echo: true
#| output-location: column
#| fig-width: 6
#| fig-height: 5

# Data and aesthetic mapping
ggplot(mpg, aes(cty, hwy)) +
  # Layer: Points with color mapped to displacement
  geom_point(mapping = aes(colour = displ)) +
  # Layer: Smoothed line (linear model)
  geom_smooth(formula = y ~ x, method = "lm") +
  # Scale: Continuous color scale using viridis palette
  scale_colour_viridis_c() +
  # Faceting: Grid of subplots by year and drive type
  facet_grid(year ~ drv) +
  # Coordinate system: Fixed aspect ratio
  coord_fixed() +
  # Theme: Minimal theme
  theme_minimal() +
  # Theme modification: Remove minor grid lines
  theme(panel.grid.minor = element_blank())
```

![](assets/img/layers.png){fig-align="right" width="30%"}

------------------------------------------------------------------------

![](assets/img/ggplot_ext.png)

------------------------------------------------------------------------

::: {layout-nrow="2"}
![ggstream](assets/img/ggstream.png){width="45%"} ![geomtextpath](assets/img/geomtextpath.png){width="30%"} ![ggpattern](assets/img/ggpattern.png){width="40%"} ![ggqr](assets/img/ggqr.png){width="45%"}
:::

::: notes
Many more on GitHub
:::

------------------------------------------------------------------------

## Agenda

**Finding inspiration**\
- Exercices

**Getting creative with code**\
- Exercices

**Making it personal**\
- Exercices

**Q&A**

::: notes
We'll look at some tips, how we can make the process easier, all the way from the start to the end, and we're breaking it down to 3 parts
:::

------------------------------------------------------------------------

```{webr-r}
ggplot(mpg, aes(cty, hwy)) +
  geom_point(aes(colour = displ))
```

::: notes
Run, edit, download Use RStudio/Positron if you feel more comfortable
:::

------------------------------------------------------------------------

# Finding inspiration

![](assets/img/chapter1.png){fig-align="center"}

------------------------------------------------------------------------

## **Look at other people's work**

\

Dissect their choices

Imitate style or techniques

Remix

::: notes
The most obvious
:::

------------------------------------------------------------------------

::::: columns
::: column
[![The Entombment of Christ. On the left, Caravaggio’s original. On the right, Rubens’ versions. - Old Masters Copying Older Masters](assets/img/caravaggio-rubens.jpg)](https://www.sightsize.com/old-masters-copying-older-masters-part-1/)
:::

::: column
[![Everything is a remix](assets/img/remix.png)](https://www.youtube.com/watch?v=X9RYuvPCQUA)
:::
:::::

------------------------------------------------------------------------

![](assets/img/carbon1.jpeg){fig-align="center"}

------------------------------------------------------------------------

![](assets/img/carbon2.png){fig-align="center"}

::: notes
Bars bend, 3d effect
:::

------------------------------------------------------------------------

## **Try out new packages**

\
Social media

Blogs

Newsletters

…

------------------------------------------------------------------------

![](assets/img/ggcirclepack.png){fig-align="center"}

::: notes
ggcirclepack
:::

------------------------------------------------------------------------

## **Look into charts typically<br>used in other fields**

![](assets/img/ggsoccer.png){fig-align="center"}

::: notes
Shift perspective

Go through the packages at different CRAN Task Views and search for ggplot2 packages https://cran.r-project.org/web/views/
:::

------------------------------------------------------------------------

![](assets/img/anchor.png){fig-align="center"}

------------------------------------------------------------------------

![](assets/img/bakeoff.jpeg){fig-align="center"}

::: notes
Add the original on the left I saw a chart about opening and closing stock prices, minimum and maximum price
:::

------------------------------------------------------------------------

## **Sketch before coding**

![](assets/img/sketch.png){fig-align="center"}

::: notes
Analog/Digital Spend 5-10 minutes to sketch out some ideas I get "locked" when I code
:::

------------------------------------------------------------------------

## **Break the rules**

![](assets/img/babynames.png){fig-align="center"}

::: notes
Deliberately try to break the rules

I did it a lot in the beginning but not intentionally, I didn't know the rules
:::

------------------------------------------------------------------------

## **Try generative or data art**

::::: columns
::: column
![Danielle Navarro](assets/img/danielle.png)
:::

::: {.column width="35%"}
![MeTooMentum by Valentina D'Efilippo](assets/img/valentina.jpg)
:::
:::::

------------------------------------------------------------------------

::::: columns
::: column
![truchet R package](https://paezha.github.io/truchet/reference/figures/README-unnamed-chunk-14-1.png){fig-align="center"}
:::

::: column
![](assets/img/dataart.png){fig-align="center"}
:::
:::::

::: notes
Try data art to get ideas or find new ways to visualize data That's how I found truchet R package, and I made bars with it
:::

------------------------------------------------------------------------

## **Ask an LLM**

![](assets/img/chatgpt.png){fig-align="center"}

------------------------------------------------------------------------

![](assets/img/claude.png){fig-align="center"}

------------------------------------------------------------------------

# Exercises

------------------------------------------------------------------------

## 1/5 Look at other people's work

On the next slide, choose a visualization that you like. Then, spend a couple minutes to think:

Why do you like it? (Style, colors, emotional response,…)

How did they make it? (What kind of chart is it? If it were a ggplot, which geoms would you use to make it?)

------------------------------------------------------------------------

Choose one of the visualizations below, or pick one from the [Information is Beautiful Awards Longlist](https://www.informationisbeautifulawards.com/showcase?award=2023&pcategory=long-list&type=awards){target="_blank"}

![](assets/img/hats.webp){fig-align="center"}

![](https://blog.datawrapper.de/wp-content/uploads/2023/03/img00027-1240x1101.png){fig-align="center"}

![](assets/img/migration.png){fig-align="center"}

------------------------------------------------------------------------

## 2/5 Try out new packages

Note how different charts convey different messages about the same data.

::::: columns
::: column
```{r echo=TRUE}

ggplot(diamonds, aes(cut, fill = cut)) +
  geom_bar()

```
:::

::: column
```{r echo=TRUE}
ggplot(diamonds %>% count(cut), aes(area = n, label = cut, fill = cut)) +
  geom_treemap() +
  geom_treemap_text(color = "white")
```
:::
:::::

------------------------------------------------------------------------

Run the code below. Then, go to [Introduction to ggridges](https://cran.r-project.org/web/packages/ggridges/vignettes/introduction.html){target="_blank"} and adapt one of the examples to the ```diamonds``` dataset below and rerun the code. Why would you prefer ggridges over a bar chart or a treemap?

```{webr-r}
ggplot(diamonds, aes(x = price, y = cut, fill = cut)) + 
  geom_density_ridges() 
```

------------------------------------------------------------------------

## 3/5 Search in other fields

Go to [CRAN Task Views](https://cran.r-project.org/web/views/){target="_blank"} and pick a topic unrelated to your work or interests. Search for `plot` or `visualiz` in that topic, in order to find packages you could use. Then, go to a package's vignette or documentation to find plot examples. How might you adapt them to your own data or work?

![](assets/img/cran-views.png){fig-align="center"}

------------------------------------------------------------------------

## 4/5 Break the rules

A common rule in data visualization is:

> Mapping a single variable to multiple aesthetics is redundant. Because it is redundant information, in most cases avoid mapping a single variable to multiple aesthetics.\
> ([R for Data Science: Exercise Solutions](https://jrnold.github.io/r4ds-exercise-solutions/data-visualisation.html))

Why do you think this rule is usually recommended? Take a moment to think about it, then continue to the next slide.

------------------------------------------------------------------------

Map one or both variables (`displ`, `hwy`) to as many aesthetics as you want. [Available aesthetics](https://ggplot2.tidyverse.org/articles/ggplot2-specs.html#point){target="_blank"} for geom_point() are: `color`, `size`, `alpha` and `shape` (plus `fill` for some shapes). Are there any benefits by mapping a variable to two or more aesthetics?


```{webr-r}
ggplot(mpg, aes(x = displ, y = hwy)) +
  geom_point()
```

------------------------------------------------------------------------

## 5/5 Ask an LLM

> Give me 5 ideas for a creative data visualization of the mpg dataset in ggplot2

\
Test this or a similar prompt with your favorite LLM or [Copilot](https://www.bing.com/chat){target="_blank"} (free, no account needed)

------------------------------------------------------------------------

## End of exercises

Share any of the following in the chat, or take a break!

A visualization you liked, write why you like it

A new package you would like to try and why

Did your LLM come up with any good ideas?

------------------------------------------------------------------------

# Getting creative with code

![](assets/img/chapter2.png){fig-align="center"}

------------------------------------------------------------------------

## **Look at other people's code**

![](assets/img/cedric.png){fig-align="center"}

::: notes
Common in the R community to share your code If you see something you like, look at the code
:::

------------------------------------------------------------------------

## **Recreate data visualizations<br>made with other tools**

Similar to remixing but here the goal is to make a "copy" of the original

::: notes
Similar to remixing, but this is more of an exercise, you have a goal and you have to come up with solutions

My favorite thing to do, great way to learn!!
:::

------------------------------------------------------------------------

![](assets/img/eurovision1.jpg){fig-align="center"}

------------------------------------------------------------------------

![](assets/img/eurovision2.png){fig-align="center"}

::: notes
Eurovision song contest scoreboard, as seen on TV
:::

------------------------------------------------------------------------

Partly is the goal, partly the constraints

![](assets/img/greeneggs.webp)

------------------------------------------------------------------------

## **Try to break things**

Try out different options in ggplot2 functions

Get to know your tool

::: notes
Get to know your tool

Try options and see how it affects your plot

Try extreme values, very thick lines, huge or tiny text, play with transparency, negative values

(That's how I found out about negative margins)
:::

------------------------------------------------------------------------

## **Use `geom_text()`**

![](assets/img/text.png){fig-align="center"}

::: notes
Text is direct, no need to look up symbols!

geom_text usually for labels, use it for mapping variables: you can play with font size, color, fonts

I like text visualizations and I think they're underused

geom_text with ggfx blend
:::

------------------------------------------------------------------------

![](assets/img/rbrath.jpg)

[Author's figures (PDF)](https://richardbrath.wordpress.com/wp-content/uploads/2020/10/diagrams_and_figures_from_visualizing_with_type_richard_brath_cc_by_sa_4.0_20201023e.pdf)

------------------------------------------------------------------------

![](assets/img/text.jpg)

------------------------------------------------------------------------

## **Create your own geoms**

![](assets/img/spirals.png){fig-align="center"}

::: notes
If you want something more custom, you can code it. I've tried but never really succeeded, maybe you'll have better luck
:::

------------------------------------------------------------------------

## **Use ~~`ggplot_build()`~~`layer_data()`**

![](assets/img/swift.png){fig-align="center"}

::: notes
A technique that I've been using the last year or so
:::

------------------------------------------------------------------------

![](assets/img/beeswarm.png){fig-align="center"}

------------------------------------------------------------------------

`layer_data(p, 1)`

![](assets/img/ggplot_build.png)

------------------------------------------------------------------------

![](assets/img/swift.png){fig-align="center"}

::: notes
Make a plot with ggbeeswarm, use ggplot_build() to get the plot elements as data frame, then use it to plot the album with ggimage
:::

------------------------------------------------------------------------

## **Use `coord_radial()`**

![](assets/img/portal.png){fig-align="center"}

------------------------------------------------------------------------

## **Creative use of geoms**

![](assets/img/penguins.png){fig-align="center"}

::: notes
Use geoms beyond their intended use (off-label!)

Try to see geoms not as chart but as building blocks or drawing tools. geom_point is not for scatterplots, it's for drawing points
:::

------------------------------------------------------------------------

`geom_bspline_closed()` from ggforce

![](assets/img/xray.png){fig-align="center"}

::: notes
I don't really know what the intended use for geom_bspline_closed() is, but I don't think it's for drawing penguins! :)
:::

------------------------------------------------------------------------

See like an artist

::::: columns
::: {.column width="60%"}
![You can't really buy this!](assets/img/canvas.png)
:::

::: {.column width="40%"}
![](assets/img/picturethis.jpg)
:::
:::::

------------------------------------------------------------------------

## **Participate in challenges**

\
Experiment

Learn

Get feedback

![](assets/img/TidyTuesday.png){fig-align="center"}

::: notes
Share online if you want to, low risk environment, R people are usually nice :)

All my plots in this talk are from TidyTuesday submissions
:::

------------------------------------------------------------------------

Participate in challenges

\
Different datasets

Different types of visualization

Deadlines

Portfolio of plots and code

------------------------------------------------------------------------

# Exercises

------------------------------------------------------------------------

## 1/4 Try to break ggplot

Try out really big or negative values in functions. Use expressions in aes() to create on-the-fly variables. Use unconventional geoms, eg. geom_tile. Use coord_radial(). Use negative values in margins.

```{webr-r}
ggplot(msleep, aes(x = bodywt, y = brainwt, size = sleep_total, color = vore)) +
  geom_point(alpha = 0.7) +
  scale_x_log10() +
  scale_y_log10() +
  scale_size_continuous(range = c(1, 8)) +
  scale_color_viridis_d(option = "turbo", na.value = "gray50") +
  labs(
    title = "Mammals sleep dataset",
    subtitle = "An updated and expanded version of the mammals sleep dataset",
    x = "Body weight (kg, log)",
    y = "Brain weight (kg, log)",
    size = "Sleep (h)"
  ) +
  theme_minimal() +
  theme(
    plot.title = element_text(face = "bold"),
    plot.margin = margin(10, 10, 10, 10)
  )

```

------------------------------------------------------------------------

## 2/4 Creative use of geoms

Run the code to see the face. Use [ggplot2 geoms](https://ggplot2.tidyverse.org/reference/#geoms) to add a nose, pink cheeks, more eyes, or whatever you want. When you're done, hover over the plot and download it!

```{webr-r}
ggplot() +
  geom_point(aes(x = c(-1, 1), y = 0), size = 50) +
  geom_curve(aes(x = -1, xend = 1, y = -1, yend = -1)) +
  coord_fixed(xlim = c(-2, 2), ylim = c(-2, 1))
```

------------------------------------------------------------------------

## 3/4 Text visualization

Map duration to size, party to color

```{webr-r}
presidential %>% 
  mutate(
    duration = as.numeric(end - start),
    i = row_number()
  ) %>% 
  ggplot(aes(0, i, label = name)) +
  geom_text() +
  theme_void()
```

------------------------------------------------------------------------

## 4/4 Recreate visualizations made with other tools

Recreate this Excel chart ([source](https://www.techonthenet.com/excel/charts/bar_chart2016.php){target="_blank"}).

![](assets/img/excel_barchart.png)

```{webr-r}
#| fig-height: 6
#| fig-width: 10

excel_df <- data.frame(
  Product = factor(rep(c("Apples", "Oranges", "Bananas", "Pears"), each = 2), 
                   levels = c("Apples", "Oranges", "Bananas", "Pears")),
  Variable = rep(c("Restock Time", "Shelf Life"), 4),
  Value = c(14, 19, 8, 15, 18, 7, 12, 10)
)

ggplot(excel_df) +
  geom_col(aes(Value, Product, fill = Variable), position = position_dodge())

```

------------------------------------------------------------------------

## End of exercises

Share the face you created or the recreation of the Excel chart

Take a break!

------------------------------------------------------------------------

# Making it personal

![](assets/img/chapter3.png){fig-align="center"}

::: notes
We all are different, hard to give advice without sounding like "just be yourself". Which is not always a good advice. But there are a few things you can do
:::

------------------------------------------------------------------------

## **Don't use the defaults (colors, fonts, etc.)**

Remember accessibility!

![](assets/img/metbrewer.png){fig-align="center"}

::: notes
You can go a long way just by not using the defaults

Remember accessibility!
:::

------------------------------------------------------------------------

::::: columns
::: column
![Font Book](assets/img/mac-fontbook.png){fig-align="center"}
:::

::: column
![Fonts](assets/img/windows-fonts.webp){fig-align="center"}
:::
:::::

------------------------------------------------------------------------

## **When in doubt, subtract**

Simplicity in design can be highly creative

![](assets/img/un.jpeg){fig-align="center"}

::: notes
Sometimes when we are creative, we tend to overcomplicate things

Instead subtract and go bold or not
:::

------------------------------------------------------------------------

## **Try new techniques**

Step out of comfort zones

::: notes
To find your own style, you have to actually try something new

If you feel a bit insecure, do a more conventional plot and a more creative one
:::

------------------------------------------------------------------------

## **Choose subjects that resonate with you**

Blend your interests, hobbies, knowledge

::: notes
Easier to be creative when you like the subject a TV show you like, gardening, whatever

Makes it easier to be personal
:::

------------------------------------------------------------------------

# Exercises

------------------------------------------------------------------------

## 1/3 Don't use the defaults

Add a color scale with a palette from the [MetBrewer](https://github.com/BlakeRMills/MetBrewer){target="_blank"} package. Add a theme to your plot and make a few [modifications](https://ggplot2.tidyverse.org/reference/theme.html){target="_blank"}.

```{webr-r}
ggplot(mpg, aes(cty, hwy, colour = class)) +
  geom_point()
```

------------------------------------------------------------------------

## 2/3 Subtract

Remove elements from plot, make it bolder (modified, C. Scherér)

```{webr-r}
#| fig-height: 7
#| fig-width: 8

msleep %>% 
  count(vore) %>% 
  ggplot(aes(x = vore, y = n, fill = vore)) +
  geom_col(color = "black", linewidth = 0.5) +
  scale_y_continuous(breaks = seq(0, 40, 5)) +
  labs(
    title = "Number of animals in the mammals sleep dataset by feeding behavior",
    x = "Feeding behavior",
    fill = "Feeding behavior",
    y = "N"
  ) +
  theme_linedraw() +
  theme(
    plot.title = element_text(size = 16, face = "bold"),
    axis.text = element_text(size = 12),
    axis.title = element_text(size = 14, face = "bold")
  )

```

------------------------------------------------------------------------

## End of exercises

------------------------------------------------------------------------

# Outro

------------------------------------------------------------------------

Keep a list of ideas, packages, code snippets, etc.

Don't wait for inspiration

![](assets/img/inspiration.png){fig-align="center"}

::: notes
Make it easy for you Bookmarks, notebook, whatever works for you
:::

------------------------------------------------------------------------

Always give credit!

![](assets/img/benice.png){fig-align="center"}

::: notes
Whenever you use something or get inspired by someone else on social media or maybe a comment in your code
:::

------------------------------------------------------------------------

Just do it, creativity shouldn't be the goal

You can't be creative all the time

![](assets/img/cringe.jpeg){fig-align="center"}

::: notes
And to contradict myself here, try to be creative if you want to but...

I make not so creative plots most of time, sometimes even bad ones, like this disaster! :)

But it's okay
:::

------------------------------------------------------------------------

Practice regularly

Make lots of visualizations

Share and get feedback

::: notes
Creating your own style or expression is a skill and it takes time to develop
:::

------------------------------------------------------------------------

![](assets/img/nopressure.png){fig-align="center"}
